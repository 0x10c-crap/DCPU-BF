; =====Begin file: brainfuck.dasm
dat 0x7cc1,0xa       ; SET I, bf_code
dat 0x7ce1,0x18f     ; SET J, bf_output
dat 0x7c20,0x7a      ; JSR bf_compile
dat 0x7c20,0x18f     ; JSR bf_output
dat 0x7f83,0x1       ; SUB PC, 1
; bf_code: (line 10)
dat 0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x5b,0x3e,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x3e,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x3e,0x2b,0x2b,0x2b,0x3e,0x2b,0x3c,0x3c,0x3c,0x3c,0x2d,0x5d,0x3e,0x2b,0x2b,0x2e,0x3e,0x2b,0x2e,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2e,0x2e,0x2b,0x2b,0x2b,0x2e,0x3e,0x2b,0x2b,0x2e,0x3c,0x3c,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2b,0x2e,0x3e,0x2e,0x2b,0x2b,0x2b,0x2e,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2e,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2d,0x2e,0x3e,0x2b,0x2e,0x3e,0x2e,0x0; .dw "++++++++++[>+++++++>++++++++++>+++>+<<<<-]>++.>+.+++++++..+++.>++.<<+++++++++++++++.>.+++.------.--------.>+.>.", 0
; bf_compile: (line 14)
dat 0x7fc1,0x21,0x118; SET [ptr_output_char], output_char
dat 0x7fc1,0x3b,0x119; SET [ptr_read_key], read_key_in
dat 0x1fc2,0x118     ; ADD [ptr_output_char], J
dat 0x1fc2,0x119     ; ADD [ptr_read_key], J
dat 0x1c01           ; SET A, J
dat 0x1821           ; SET B, I
dat 0x7c41,0xff01    ; SET C, bf_bootstrap_end - bf_bootstrap_ln
dat 0x7c20,0x11a     ; JSR memcpy
dat 0x7ce2,0xff01    ; ADD J, bf_bootstrap_end - bf_bootstrap_ln
dat 0x7cc3,0x1       ; SUB I, 1
; loop: (line 31)
dat 0x7cc2,0x1       ; ADD I, 1
dat 0x7dd2,0x0       ; IFE [I], 0
dat 0x7f81,0x115     ; SET PC, loop_done
dat 0x7dd2,0x2b      ; IFE [I], '+'
dat 0x7dd2,0x2d      ; IFE [I], '-'
dat 0x7dd2,0x3e      ; IFE [I], '>'
dat 0x7dd2,0x3c      ; IFE [I], '<'
dat 0x7dd2,0x2c      ; IFE [I], ','
dat 0x7dd2,0x2e      ; IFE [I], '.'
dat 0x7f81,0xa4      ; SET PC, loop_compile
dat 0x7f81,0x8e      ; SET PC, loop
; loop_compile: (line 43)
dat 0x7dd2,0x2b      ; IFE [I], '+'
dat 0x7f81,0xca      ; SET PC, bf_inc_val
dat 0x7dd2,0x2d      ; IFE [I], '-'
dat 0x7f81,0xd4      ; SET PC, bf_dec_val
dat 0x7dd2,0x3e      ; IFE [I], '>'
dat 0x7f81,0xde      ; SET PC, bf_inc_ptr
dat 0x7dd2,0x3c      ; IFE [I], '<'
dat 0x7f81,0xe8      ; SET PC, bf_dec_ptr
dat 0x7ce1,0x7c20    ; SET J, {JSR 0x8000}
dat 0x7ce2,0x1       ; ADD J, 1
dat 0x7fd3,0x0,0x117 ; IFN [ptr_inc_count], 0
dat 0x7c20,0x107     ; JSR output_ptr_inc
dat 0x7fd3,0x0,0x116 ; IFN [val_inc_count], 0
dat 0x7c20,0xfe      ; JSR output_val_inc
dat 0x7dd2,0x2c      ; IFE [I], ','
dat 0x7f81,0xf2      ; SET PC, bf_read_key
dat 0x7dd2,0x2e      ; IFE [I], '.'
dat 0x7f81,0xf8      ; SET PC, bf_put_char
; bf_inc_val: (line 62)
dat 0x7fc2,0x1,0x116 ; ADD [val_inc_count], 1
dat 0x7fd3,0x0,0x117 ; IFN [ptr_inc_count], 0
dat 0x7c20,0x107     ; JSR output_ptr_inc
dat 0x7f81,0x8e      ; SET PC, loop
; bf_dec_val: (line 67)
dat 0x7fc3,0x1,0x116 ; SUB [val_inc_count], 1
dat 0x7fd3,0x0,0x117 ; IFN [ptr_inc_count], 0
dat 0x7c20,0x107     ; JSR output_ptr_inc
dat 0x7f81,0x8e      ; SET PC, loop
; bf_inc_ptr: (line 72)
dat 0x7fc2,0x1,0x117 ; ADD [ptr_inc_count], 1
dat 0x7fd3,0x0,0x116 ; IFN [val_inc_count], 0
dat 0x7c20,0xfe      ; JSR output_val_inc
dat 0x7f81,0x8e      ; SET PC, loop
; bf_dec_ptr: (line 77)
dat 0x7fc3,0x1,0x117 ; SUB [ptr_inc_count], 1
dat 0x7fd3,0x0,0x116 ; IFN [val_inc_count], 0
dat 0x7c20,0xfe      ; JSR output_val_inc
dat 0x7f81,0x8e      ; SET PC, loop
; bf_read_key: (line 82)
dat 0x79e1,0x118     ; SET [J], [ptr_output_char]
dat 0x7ce2,0x1       ; ADD J, 1
dat 0x7f81,0x8e      ; SET PC, loop
; bf_put_char: (line 86)
dat 0x79e1,0x119     ; SET [J], [ptr_read_key]
dat 0x7ce2,0x1       ; ADD J, 1
dat 0x7f81,0x8e      ; SET PC, loop
; output_val_inc: (line 91)
dat 0x7c01,0x7d02    ; SET A, {ADD [A], 0x8000}
dat 0x7821,0x116     ; SET B, [val_inc_count]
dat 0x7fc1,0x0,0x116 ; SET [val_inc_count], 0
dat 0x7f81,0x10e     ; SET PC, output_inc
; output_ptr_inc: (line 96)
dat 0x7c01,0x7c02    ; SET A, {ADD A, 0x8000}
dat 0x7821,0x117     ; SET B, [ptr_inc_count]
dat 0x7fc1,0x0,0x117 ; SET [ptr_inc_count], 0
; output_inc: (line 100)
dat 0x1e1            ; SET [J], A
dat 0x7ce2,0x1       ; ADD J, 1
dat 0x5e1            ; SET [J], B
dat 0x7ce2,0x1       ; ADD J, 1
dat 0x6381           ; SET PC, POP
; loop_done: (line 107)
dat 0x6381           ; SET PC, POP
; val_inc_count: (line 111)
dat 0x0              ; .dw 0
; ptr_inc_count: (line 113)
dat 0x0              ; .dw 0
; ptr_output_char: (line 115)
dat 0x21             ; .dw output_char
; ptr_read_key: (line 117)
dat 0x3b             ; .dw read_key_in
; :memcpy (line 121)
dat 0x1f01           ; SET PUSH, J
dat 0x6ce1           ; SET J, SP
dat 0x761            ; SET SP, B
dat 0x822            ; ADD B, C
dat 0x7f81,0x13d     ; SET PC, .duff
; :.loop (line 130)
dat 0x772            ; IFE SP, B
dat 0x7f81,0x144     ; SET PC, .end
dat 0x6101           ; SET [A], POP
dat 0x7c02,0x1       ; ADD A, 0x01
dat 0x6101           ; SET [A], POP
dat 0x7c02,0x1       ; ADD A, 0x01
dat 0x6101           ; SET [A], POP
dat 0x7c02,0x1       ; ADD A, 0x01
dat 0x6101           ; SET [A], POP
dat 0x7c02,0x1       ; ADD A, 0x01
dat 0x6101           ; SET [A], POP
dat 0x7c02,0x1       ; ADD A, 0x01
dat 0x6101           ; SET [A], POP
dat 0x7c02,0x1       ; ADD A, 0x01
dat 0x6101           ; SET [A], POP
dat 0x7c02,0x1       ; ADD A, 0x01
dat 0x6101           ; SET [A], POP
dat 0x7c02,0x1       ; ADD A, 0x01
dat 0x7f81,0x8e      ; SET PC, loop
; :.duff (line 152)
dat 0x7c4a,0x7       ; AND C, 0x7
dat 0x7c4f,0x1       ; SHL C, 1
dat 0x7c42,0x6       ; ADD C, 6
dat 0xb83            ; SUB PC, C
; :.end (line 158)
dat 0x1f61           ; SET SP, J
dat 0x60e1           ; SET J, POP
dat 0x6381           ; SET PC, POP
; bf_bootstrap: (line 165)
; .equ end_of_bf $ (line 166)
; bf_bootstrap_ln: (line 167)
; .org 0 (line 168)
dat 0x1a00           ; HWN I
dat 0x7cc3,0x1       ; SUB I, 1
; :hw_init_loop (line 172)
dat 0x7cd2,0xffff    ; IFE I, 0xFFFF
dat 0x7f82,0xfe8b    ; ADD PC, hw_found - $
dat 0x1301           ; SET PUSH, Y
dat 0x1701           ; SET PUSH, Z
dat 0x1a20           ; HWQ I
dat 0x60a1           ; SET Z, POP
dat 0x6081           ; SET Y, POP
dat 0x7c12,0xf615    ; IFE A, 0xf615
dat 0x7c32,0x7349    ; IFE B, 0x7349
dat 0x1881           ; SET Y, I
dat 0x7c12,0x7406    ; IFE A, 0x7406
dat 0x7c32,0x30cf    ; IFE B, 0x30cf
dat 0x18a1           ; SET Z, I
dat 0x7cc3,0x1       ; SUB I, 1
; reloc_hw_init_loop: (line 187)
dat 0x7f82,0x192     ; ADD PC, hw_init_loop + $
; :hw_found (line 190)
dat 0x7c01,0x0       ; SET A, 0
dat 0x7c21,0xfe6d    ; SET B, 0xFE6D
dat 0x1240           ; HWI Y
dat 0x7f82,0xfeb7    ; ADD PC, start - $
; :output_char (line 197)
dat 0x2041           ; SET C, [A]
dat 0x7c52,0xa       ; IFE C, 0x0A
dat 0x7f82,0x1bf     ; ADD PC, output_char_newline + $
dat 0x7c4b,0xf000    ; BOR C, 0xF000
dat 0x921            ; SET [B], C
dat 0x7c22,0x1       ; ADD B, 1
dat 0x7c32,0x0       ; IFE B, 0
dat 0x7c21,0xfe6d    ; SET B, 0xFE6D
dat 0x6381           ; SET PC, POP
; :output_char_newline (line 207)
dat 0x7c26,0x80      ; DIV B, 128
dat 0x7c24,0x80      ; MUL B, 128
dat 0x7c22,0x80      ; ADD B, 128
dat 0x7c36,0x80      ; IFL B, 128
dat 0x7c21,0xfe6d    ; SET B, 0xFE6D
dat 0x6381           ; SET PC, POP
; :read_key_in (line 215)
dat 0x301            ; SET PUSH, A
dat 0x7c01,0x1       ; SET A, 1
; :read_key_in_loop (line 218)
dat 0x1640           ; HWI Z
dat 0x7c52,0x0       ; IFE C, 0
dat 0x7f82,0x1cd     ; ADD PC, read_key_in_loop + $
dat 0x6001           ; SET A, POP
dat 0x901            ; SET [A], C
dat 0x6381           ; SET PC, POP
; :start (line 225)
dat 0x7cc1,0x64      ; SET I, 100
; :bf_bootstrap_end (line 227)
; .org end_of_bf+$ (line 228)
; bf_output: (line 229)
